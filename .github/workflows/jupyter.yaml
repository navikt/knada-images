name: "Build Jupyter image"

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/jupyter.yaml
      - jupyter/Dockerfile
  workflow_dispatch:
  schedule:
    - cron: '16 13 * * *'

env:
  IMAGE: jupyter

jobs:
  build:
    name: Build standalone Jupyter image for Python
    strategy:
      matrix:
        version: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: projects/193123067890/locations/global/workloadIdentityPools/ci-knada-images/providers/ci-knada-images
          service_account: ci-knada-images@knada-gcp.iam.gserviceaccount.com
      - uses: docker/login-action@v2
        with:
          registry: europe-west1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - run: |
          knada=$(gcloud artifacts docker images list europe-west1-docker.pkg.dev/knada-gcp/knada/jupyter --include-tags --filter TAGS:-{{ matrix.version }} --sort-by=~Update_Time --limit=1 --format=json)

          python3 compare_tags.py "$knada" "python-${{ matrix.version }}"
          out=$?
          if [ $out -eq 100 ]
          then
              echo "outdated=true" >> $GITHUB_ENV
          elif [ $out != 0 ]
          then
              echo "up to date"
          else
              echo "error"
          fi

      - uses: docker/setup-buildx-action@v2
      - run: echo "TAG=$(git log -1 --pretty=%ad --date=format:%Y-%m-%d)-$(git log --pretty=format:'%h' -n 1)" >> $GITHUB_ENV
      - uses: docker/build-push-action@v4
        if: ${{ env.outdated }} == "true" || contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name)
        with:
          file: jupyter/Dockerfile
          push: true
          tags: "europe-west1-docker.pkg.dev/knada-gcp/knada/${{ env.IMAGE }}:${{ env.TAG }}-${{ matrix.version }}"
          build-args: python_version=${{ matrix.version }}
